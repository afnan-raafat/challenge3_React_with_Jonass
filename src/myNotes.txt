 // دا الكود قبل ما نعمل كل component فى فايل لوحده 
 // برضو هنلاحظ الطريقه هنا مستخدمين ال props  عشان اشير بين الفانكشنز 



import { useState } from "react";
import "./index.css";

// تطبيفا على ال lifting state up
export default function App() {
  const [items, setItems] = useState([]);
  function handleAddItems(item) {
    // معناها هيضيف العنصر الجديد
    setItems((items) => [...items, item]);
  }

  /// Delete function
  function handleDeleteItem(id) {
    setItems((item) => items.filter((item) => item.id != id));
  }
  /// Check Box function
  function handleToggleItem(id) {
    setItems((item) =>
      items.map((item) =>
        item.id === id ? { ...item, packed: !item.packed } : item
      )
    );
  }
  /// Clear all list function
  function handleClearItems() {
    const comfirmed = window.confirm(
      "Are you Sure You Want to delete All items ?"
    );
    if (comfirmed) setItems([]);
  }

  return (
    <div className="app">
      <Logo />
      <Form onAddItems={handleAddItems} />
      <PackingList
        items={items}
        onDeleteItem={handleDeleteItem}
        onToggleItem={handleToggleItem}
        onClearList={handleClearItems}
      />
      <States items={items} />
    </div>
  );
}

function Logo() {
  return <h1> FAR AWAY 🦆 </h1>;
}

function Form({ onAddItems }) {
  const [description, setDescription] = useState("test");
  const [Quantity, setQuantity] = useState(5);

  function handleSubmit(e) {
    e.preventDefault();
    if (!description) return;

    const newItem = { description, Quantity, packed: false, id: Date.now() };
    onAddItems(newItem);
    setDescription("");
    setQuantity(1);
  }

  return (
    <form className="add-form" onSubmit={handleSubmit}>
      <h3>What Do You Need In Journey ? 🏝️</h3>
      <select
        value={Quantity}
        onChange={(e) => setQuantity(Number(e.target.value))}
      >
        {Array.from({ length: 20 }, (_, i) => i + 1).map((num) => (
          <option value={num} key={num}>
            {num}
          </option>
        ))}
      </select>
      {/*  هنا احنا بنجيب  اللى كتبته ف الانبوت  */}
      <input
        type="text"
        placeholder="Item..."
        value={description}
        onChange={(e) => setDescription(e.target.value)}
      ></input>
      <button>Add</button>
    </form>
  );
}
function PackingList({ items, onDeleteItem, onToggleItem, onClearList }) {
  const [sortBy, setSortBy] = useState("input");
  let sortedItems;
  /// دى عبارة عن اراى جديده هتشيل العناصر بالترتيب اللى اليوزر يحدده
  if (sortBy === "input") sortedItems = items; // زى ما العناصر دخلت

  if (sortBy === "description")
    sortedItems = items
      .slice()
      .sort((a, b) => a.description.localeCompare(b.description));

  if (sortBy === "packed")
    sortedItems = items
      .slice()
      .sort((a, b) => Number(a.packed) - Number(b.packed));

  return (
    <div className="list">
      <ul>
        {sortedItems.map((item) => (
          <Item
            item={item}
            onDeleteItem={onDeleteItem}
            onToggleItem={onToggleItem}
            key={item.id}
          />
        ))}
      </ul>
      {/* Buttons & actions  */}
      {/* جزئيه ترتيب العناصر هنستخدمها كتير ######## */}
      <div className="actions">
        <select value={sortBy} onChange={(e) => setSortBy(e.target.value)}>
          <option value="input">Sort By Input order</option>
          <option value="description">Sort By Name</option>
          <option value="packed">Sort By packed item</option>
        </select>
        {/* clear all  */}
        <button onClick={onClearList}>Clear List</button>
      </div>
    </div>
  );
}
function Item({ item, onDeleteItem, onToggleItem }) {
  return (
    <li>
      <input
        type="checkbox"
        value={item.packed}
        onChange={() => onToggleItem(item.id)}
      ></input>

      <span style={item.packed ? { textDecoration: "Line-through" } : {}}>
        {item.Quantity} {item.description}
      </span>
      <button onClick={() => onDeleteItem(item.id)}>❌</button>
    </li>
  );
}

// Footer
function States({ items }) {
  if (items.length === 0)
    return (
      <p className="stats">
        <em>Start Adding To Your List 😊</em>
      </p>
    );

  const numItems = items.length; // دا لكل العناصر سواء عملتها او لا
  const packedItems = items.filter((item) => item.packed).length; /// دا اللى حجزته او خلصته يعنى
  const per = Math.round((packedItems / numItems) * 100);

  return (
    <footer className="stats">
      <em>
        {per === 100
          ? "You Got everyThing 👌 Ready to go "
          : ` You Have ${numItems} items in your List ,
          and you already packed ${packedItems} (${per} % ).`}
      </em>
    </footer>
  );
}
